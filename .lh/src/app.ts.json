{
    "sourceFile": "src/app.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1760086521068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760087318742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,23 @@\n \r\n app.use(helmet(helmetConfig));\r\n \r\n // ✅ CORS cấu hình chuẩn cho frontend dùng withCredentials\r\n+const allowedOrigins = [\r\n+  \"http://localhost:3000\",\r\n+  \"http://localhost:3001\", \r\n+  \"http://127.0.0.1:3000\",\r\n+];\r\n+\r\n app.use(\r\n   cors({\r\n-    origin: process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n+    origin: (origin, callback) => {\r\n+      if (!origin || allowedOrigins.includes(origin)) {\r\n+        callback(null, true);\r\n+      } else {\r\n+        callback(new Error(\"Not allowed by CORS\"));\r\n+      }\r\n+    },\r\n     credentials: true,\r\n     methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\r\n     allowedHeaders: [\"Content-Type\", \"Authorization\"],\r\n   })\r\n"
                },
                {
                    "date": 1760201485833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,11 @@\n   ? { contentSecurityPolicy: false }\r\n   : {\r\n       contentSecurityPolicy: {\r\n         directives: {\r\n-          ...(helmet.contentSecurityPolicy?.getDefaultDirectives?.() ?? {}),\r\n           defaultSrc: [\"'self'\"],\r\n+          scriptSrc: [\"'self'\"],\r\n+          styleSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n           imgSrc: [\r\n             \"'self'\",\r\n             \"data:\",\r\n             \"https://res.cloudinary.com\",\r\n@@ -39,8 +40,12 @@\n           connectSrc: [\r\n             \"'self'\",\r\n             process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n           ],\r\n+          fontSrc: [\"'self'\"],\r\n+          objectSrc: [\"'none'\"],\r\n+          mediaSrc: [\"'self'\"],\r\n+          frameSrc: [\"'none'\"],\r\n         },\r\n       },\r\n     };\r\n \r\n@@ -50,8 +55,9 @@\n const allowedOrigins = [\r\n   \"http://localhost:3000\",\r\n   \"http://localhost:3001\", \r\n   \"http://127.0.0.1:3000\",\r\n+  \"https://money-wise-fe.vercel.app\", // ✅ Production frontend\r\n ];\r\n \r\n app.use(\r\n   cors({\r\n"
                },
                {
                    "date": 1760238688880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import express from \"express\";\r\n+import type  { Request, Response, NextFunction } from \"express\"\r\n+import dotenv from \"dotenv\";\r\n+import helmet from \"helmet\";\r\n+import cors from \"cors\";\r\n+import rateLimit from \"express-rate-limit\";\r\n+\r\n+import { connectDB } from \"./config/database.js\";\r\n+import authRoutes from \"./routes/auth.routes.js\";\r\n+import topicRoutes from \"./routes/topic.routes.js\";\r\n+import postRoutes from \"./routes/post.routes.js\";\r\n+import serviceRoutes from \"./routes/service.routes.js\";\r\n+\r\n+import seedAdmin from \"./utils/seedAdmin.js\";\r\n+import logger from \"./utils/logger.js\";\r\n+\r\n+dotenv.config();\r\n+\r\n+const app = express();\r\n+\r\n+const isDev = process.env.NODE_ENV !== \"production\";\r\n+\r\n+// Security middleware with relaxed CSP for dev to unblock asset loading\r\n+const helmetConfig = isDev\r\n+  ? { contentSecurityPolicy: false }\r\n+  : {\r\n+      contentSecurityPolicy: {\r\n+        directives: {\r\n+          defaultSrc: [\"'self'\"],\r\n+          scriptSrc: [\"'self'\"],\r\n+          styleSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n+          imgSrc: [\r\n+            \"'self'\",\r\n+            \"data:\",\r\n+            \"https://res.cloudinary.com\",\r\n+            \"https://scr.vn\",\r\n+            \"https://openend.vn\",\r\n+            \"https://www.citd.vn\",\r\n+            \"https://cdn.tgdd.vn\", // ✅ Cho phép ảnh từ TGDD\r\n+            \"https://*.tgdd.vn\", // ✅ Cho phép tất cả subdomain của tgdd.vn\r\n+          ],\r\n+          connectSrc: [\r\n+            \"'self'\",\r\n+            process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n+          ],\r\n+          fontSrc: [\"'self'\"],\r\n+          objectSrc: [\"'none'\"],\r\n+          mediaSrc: [\"'self'\"],\r\n+          frameSrc: [\"'none'\"],\r\n+        },\r\n+      },\r\n+    };\r\n+\r\n+app.use(helmet(helmetConfig));\r\n+\r\n+// ✅ CORS cấu hình chuẩn cho frontend dùng withCredentials\r\n+const allowedOrigins = [\r\n+  \"http://localhost:3000\",\r\n+  \"http://localhost:3001\", \r\n+  \"http://127.0.0.1:3000\",\r\n+  \"https://money-wise-fe.vercel.app\", // ✅ Production frontend\r\n+];\r\n+\r\n+app.use(\r\n+  cors({\r\n+    origin: (origin, callback) => {\r\n+      if (!origin || allowedOrigins.includes(origin)) {\r\n+        callback(null, true);\r\n+      } else {\r\n+        callback(new Error(\"Not allowed by CORS\"));\r\n+      }\r\n+    },\r\n+    credentials: true,\r\n+    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\r\n+    allowedHeaders: [\"Content-Type\", \"Authorization\"],\r\n+  })\r\n+);\r\n+\r\n+app.use(express.json());\r\n+\r\n+// Rate limiter\r\n+app.use(\r\n+  rateLimit({\r\n+    windowMs: 60 * 1000,\r\n+    max: 200,\r\n+  })\r\n+);\r\n+\r\n+// Routes\r\n+app.use(\"/api/auth\", authRoutes);\r\n+app.use(\"/api/topics\", topicRoutes);\r\n+app.use(\"/api/posts\", postRoutes);\r\n+app.use(\"/api/services\", serviceRoutes);\r\n+\r\n+// ✅ Error handler có type rõ ràng\r\n+app.use((err: Error, _req: Request, res: Response, _next: NextFunction) => {\r\n+  logger.error(\"Unhandled error: \" + (err.message || err));\r\n+  res.status(500).json({ message: \"Server error\" });\r\n+});\r\n+\r\n+// DB connect + seed admin\r\n+connectDB()\r\n+  .then(() => seedAdmin())\r\n+  .catch((err: Error) => logger.error(\"DB connect failed: \" + (err.message || err)));\r\n+\r\n+export default app;\r\n"
                },
                {
                    "date": 1760239838967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             \"https://scr.vn\",\r\n             \"https://openend.vn\",\r\n             \"https://www.citd.vn\",\r\n             \"https://cdn.tgdd.vn\", // ✅ Cho phép ảnh từ TGDD\r\n-            \"https://*.tgdd.vn\", // ✅ Cho phép tất cả subdomain của tgdd.vn\r\n+            // ✅ Cho phép tất cả subdomain của tgdd.vn\r\n           ],\r\n           connectSrc: [\r\n             \"'self'\",\r\n             process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n@@ -103,108 +103,4 @@\n   .then(() => seedAdmin())\r\n   .catch((err: Error) => logger.error(\"DB connect failed: \" + (err.message || err)));\r\n \r\n export default app;\r\n-import express from \"express\";\r\n-import type  { Request, Response, NextFunction } from \"express\"\r\n-import dotenv from \"dotenv\";\r\n-import helmet from \"helmet\";\r\n-import cors from \"cors\";\r\n-import rateLimit from \"express-rate-limit\";\r\n-\r\n-import { connectDB } from \"./config/database.js\";\r\n-import authRoutes from \"./routes/auth.routes.js\";\r\n-import topicRoutes from \"./routes/topic.routes.js\";\r\n-import postRoutes from \"./routes/post.routes.js\";\r\n-import serviceRoutes from \"./routes/service.routes.js\";\r\n-\r\n-import seedAdmin from \"./utils/seedAdmin.js\";\r\n-import logger from \"./utils/logger.js\";\r\n-\r\n-dotenv.config();\r\n-\r\n-const app = express();\r\n-\r\n-const isDev = process.env.NODE_ENV !== \"production\";\r\n-\r\n-// Security middleware with relaxed CSP for dev to unblock asset loading\r\n-const helmetConfig = isDev\r\n-  ? { contentSecurityPolicy: false }\r\n-  : {\r\n-      contentSecurityPolicy: {\r\n-        directives: {\r\n-          defaultSrc: [\"'self'\"],\r\n-          scriptSrc: [\"'self'\"],\r\n-          styleSrc: [\"'self'\", \"'unsafe-inline'\"],\r\n-          imgSrc: [\r\n-            \"'self'\",\r\n-            \"data:\",\r\n-            \"https://res.cloudinary.com\",\r\n-            \"https://scr.vn\",\r\n-            \"https://openend.vn\",\r\n-            \"https://www.citd.vn\",\r\n-          ],\r\n-          connectSrc: [\r\n-            \"'self'\",\r\n-            process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n-          ],\r\n-          fontSrc: [\"'self'\"],\r\n-          objectSrc: [\"'none'\"],\r\n-          mediaSrc: [\"'self'\"],\r\n-          frameSrc: [\"'none'\"],\r\n-        },\r\n-      },\r\n-    };\r\n-\r\n-app.use(helmet(helmetConfig));\r\n-\r\n-// ✅ CORS cấu hình chuẩn cho frontend dùng withCredentials\r\n-const allowedOrigins = [\r\n-  \"http://localhost:3000\",\r\n-  \"http://localhost:3001\", \r\n-  \"http://127.0.0.1:3000\",\r\n-  \"https://money-wise-fe.vercel.app\", // ✅ Production frontend\r\n-];\r\n-\r\n-app.use(\r\n-  cors({\r\n-    origin: (origin, callback) => {\r\n-      if (!origin || allowedOrigins.includes(origin)) {\r\n-        callback(null, true);\r\n-      } else {\r\n-        callback(new Error(\"Not allowed by CORS\"));\r\n-      }\r\n-    },\r\n-    credentials: true,\r\n-    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\r\n-    allowedHeaders: [\"Content-Type\", \"Authorization\"],\r\n-  })\r\n-);\r\n-\r\n-app.use(express.json());\r\n-\r\n-// Rate limiter\r\n-app.use(\r\n-  rateLimit({\r\n-    windowMs: 60 * 1000,\r\n-    max: 200,\r\n-  })\r\n-);\r\n-\r\n-// Routes\r\n-app.use(\"/api/auth\", authRoutes);\r\n-app.use(\"/api/topics\", topicRoutes);\r\n-app.use(\"/api/posts\", postRoutes);\r\n-app.use(\"/api/services\", serviceRoutes);\r\n-\r\n-// ✅ Error handler có type rõ ràng\r\n-app.use((err: Error, _req: Request, res: Response, _next: NextFunction) => {\r\n-  logger.error(\"Unhandled error: \" + (err.message || err));\r\n-  res.status(500).json({ message: \"Server error\" });\r\n-});\r\n-\r\n-// DB connect + seed admin\r\n-connectDB()\r\n-  .then(() => seedAdmin())\r\n-  .catch((err: Error) => logger.error(\"DB connect failed: \" + (err.message || err)));\r\n-\r\n-export default app;\r\n"
                }
            ],
            "date": 1760086521068,
            "name": "Commit-0",
            "content": "import express from \"express\";\r\nimport type  { Request, Response, NextFunction } from \"express\"\r\nimport dotenv from \"dotenv\";\r\nimport helmet from \"helmet\";\r\nimport cors from \"cors\";\r\nimport rateLimit from \"express-rate-limit\";\r\n\r\nimport { connectDB } from \"./config/database.js\";\r\nimport authRoutes from \"./routes/auth.routes.js\";\r\nimport topicRoutes from \"./routes/topic.routes.js\";\r\nimport postRoutes from \"./routes/post.routes.js\";\r\nimport serviceRoutes from \"./routes/service.routes.js\";\r\n\r\nimport seedAdmin from \"./utils/seedAdmin.js\";\r\nimport logger from \"./utils/logger.js\";\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\nconst isDev = process.env.NODE_ENV !== \"production\";\r\n\r\n// Security middleware with relaxed CSP for dev to unblock asset loading\r\nconst helmetConfig = isDev\r\n  ? { contentSecurityPolicy: false }\r\n  : {\r\n      contentSecurityPolicy: {\r\n        directives: {\r\n          ...(helmet.contentSecurityPolicy?.getDefaultDirectives?.() ?? {}),\r\n          defaultSrc: [\"'self'\"],\r\n          imgSrc: [\r\n            \"'self'\",\r\n            \"data:\",\r\n            \"https://res.cloudinary.com\",\r\n            \"https://scr.vn\",\r\n            \"https://openend.vn\",\r\n            \"https://www.citd.vn\",\r\n          ],\r\n          connectSrc: [\r\n            \"'self'\",\r\n            process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n          ],\r\n        },\r\n      },\r\n    };\r\n\r\napp.use(helmet(helmetConfig));\r\n\r\n// ✅ CORS cấu hình chuẩn cho frontend dùng withCredentials\r\napp.use(\r\n  cors({\r\n    origin: process.env.ADMIN_UI_ORIGIN || \"http://localhost:3000\",\r\n    credentials: true,\r\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\r\n    allowedHeaders: [\"Content-Type\", \"Authorization\"],\r\n  })\r\n);\r\n\r\napp.use(express.json());\r\n\r\n// Rate limiter\r\napp.use(\r\n  rateLimit({\r\n    windowMs: 60 * 1000,\r\n    max: 200,\r\n  })\r\n);\r\n\r\n// Routes\r\napp.use(\"/api/auth\", authRoutes);\r\napp.use(\"/api/topics\", topicRoutes);\r\napp.use(\"/api/posts\", postRoutes);\r\napp.use(\"/api/services\", serviceRoutes);\r\n\r\n// ✅ Error handler có type rõ ràng\r\napp.use((err: Error, _req: Request, res: Response, _next: NextFunction) => {\r\n  logger.error(\"Unhandled error: \" + (err.message || err));\r\n  res.status(500).json({ message: \"Server error\" });\r\n});\r\n\r\n// DB connect + seed admin\r\nconnectDB()\r\n  .then(() => seedAdmin())\r\n  .catch((err: Error) => logger.error(\"DB connect failed: \" + (err.message || err)));\r\n\r\nexport default app;\r\n"
        }
    ]
}